tems_music <- read.delim("../../eswc2015-lod-recsys-challenge-v1.0-TRAINING/items_music.dat", header=FALSE)
View(tems_music)
tems_music <- read.delim("../../eswc2015-lod-recsys-challenge-v1.0-TRAINING/items_music.dat", header=TRUE)
View(tems_music)
substr(tems_music$X..id, 2)
substring
substringg(tems_music$X..id, 2)
substring(tems_music$X..id, 2)
substring(tems_music$X..id, 3)
newArtsts = c(substring(tems_music$X..id, 3),tems_music$entity)
newArtsts = data.frame( item=substring(tems_music$X..id, 3),url=tems_music$entity)
View(newArtsts)
write.table(newArtsts, file="artists_url", sep="\t", col.names=F, row.names=F)
training_likes_music <- read.delim("~/GitHub/mestrado_UFCG/LODRecSys2015/eswc2015-lod-recsys-challenge-v1.0-TRAINING/training_likes_music.dat", header=F)
View(training_likes_music)
training_likes_music$V1
unique(training_likes_music$V1)
unique(training_likes_music[order(training_likes_music$V1),]$V1)
user_data = data.frame( user=unique(training_likes_music[order(training_likes_music$V1),]$V1))
user_data$id = c(1:lenfth(user_data#user))
;
user_data$id = c(1:length(user_data#user))
;
length(user_data#user)
)
length(user_data$user)
c(1:length(user_data$user))
user_data$id = c(1:length(user_data$user))
View(user_data)
write.table(user_data, file="user_data.tsp", sep="\t", col.names=F, row.names=F)
merge(tems_music, user_data, by.x=tems_music$X..id, by.y=user_data$user)
View(newArtsts)
View(tems_music)
merge(tems_music, user_data, by.x=tems_music$"X..id", by.y=user_data$user)
merge(tems_music, user_data, by.x=tems_music$X..id, by.y=user_data$user)
tems_music[1]
merge(tems_music, user_data, by.x=tems_music[1], by.y=user_data$user)
View(newArtsts)
View(tems_music)
Musical_artists = tems_music[tems_music$type!="music_genre",]
newArtsts = data.frame( item=substring(Musical_artists$X..id, 3),url=Musical_artists$entity)
View(newArtsts)
write.table(newArtsts, file="artists_url.tsp", sep="\t", col.names=F, row.names=F)
newItems = data.frame( item=substring(tems_music$X..id, 3),url=tems_music$entity)
write.table(newItems, file="items_url.tsp", sep="\t", col.names=F, row.names=F)
View(user_data)
Item_musical_genre = tems_music[tems_music$type=="music_genre",]
Item_musical_genre = tems_music[tems_music$type=="music_genre",1]
Item_musical_genre = tems_music[tems_music$type=="music_genre",]
View(Item_musical_genre)
View(Item_musical_genre)
Item_musical_genre = data.frame( item=substring(Item_musical_genre$X..id, 3),url=Item_musical_genre$entity)
View(Item_musical_genre)
View(newArtsts)
newArtsts[newArtsts$item=="29",]
View(newItems)
View(newItems)
View(training_likes_music)
View(user_data)
merge(tems_music, user_data, by.x=tems_music[1], by.y=user_data$user)
View(user_data)
merge(tems_music, user_data, by.x="X..id", by.y="user")
View(tems_music)
View(training_likes_music)
merge(training_likes_music, user_data, by.x="V1", by.y="user")
View(newItems)
View(newItems)
write.table(newArtsts, file="artists_url.tsp", sep="\t", col.names=F, row.names=F)
newArtsts = data.frame( item=substring(Musical_artists$X..id, 3),url=Musical_artists$entity)
write.table(newArtsts, file="artists_url.tsp", sep="\t", col.names=F, row.names=F)
newTraining = merge(training_likes_music, user_data, by.x="V1", by.y="user")
View(newTraining)
rep(1, 1222)
data.frame( User=newTraining$V1, Item=substring(newTraining$V2,3), weight=rep(1,length(newTraining$V1))
)
newTraining = data.frame( User=newTraining$V1, Item=substring(newTraining$V2,3), weight=rep(1,length(newTraining$V1)) )
View(newTraining)
newTraining = merge(training_likes_music, user_data, by.x="V1", by.y="user")
newTraining = data.frame( User=newTraining$id, Item=substring(newTraining$V2,3), weight=rep(1,length(newTraining$V1)) )
View(newTraining)
write.table(newTraining, file="newTraining.tsp", sep="\t", col.names=F, row.names=F, quote=F)
View(Item_musical_genre)
View(user_data)
write.table(user_data, file="MapUserData.tsp", sep="\t", col.names=F, row.names=F, quote=F)
View(newItems)
View(newArtsts)
View(Musical_artists)
View(user_data)
View(training_likes_music)
View(tems_music)
View(tems_music)
View(newTraining)
View(newItems)
View(newArtsts)
View(Item_musical_genre)
View(tems_music)
View(newArtsts)
View(newItems)
items_music <- read.delim("~/Documentos/Mestrado/Git/lodrecsys15/data/items_music.dat", header=T, quote="")
Musical_artists = items_music[items_music$type!="music_genre",]
newArtists = data.frame( item=substring(Musical_artists$X..id, 3),url=Musical_artists$entity)
View(newArtists)
write.table(newArtists, file="artists_url.tsp", sep="\t", col.names=F, row.names=F, quote=F)
write.table(newItems, file="items_url.tsp", sep="\t", col.names=F, row.names=F, quote=T)
write.table(newArtists, file="artists_url.tsp", sep="\t", col.names=F, row.names=F, quote=T)
View(Musical_artists)
write.table(newArtists, file="artists_url.tsp", sep="\t", col.names=F, row.names=F, quote=F)
LOD_artists <- read.delim("~/Documentos/Mestrado/Git/mestrado_UFCG/java workspace/LODCrawler/data/LOD_artists_genre_FINAL.tsp", header=FALSE)
View(LOD_artists)
LOD_artists[order(LOD_artists$V1),]
LOD_artists = LOD_artists[order(LOD_artists$V1),]
View(LOD_artists)
View(newArtists)
View(items_music)
View(newArtists)
newArtists[(newArtists$item%in%LOD_artists$V1),]
newArtists[!(newArtists$item%in%LOD_artists$V1),]
x = newArtists[!(newArtists$item%in%LOD_artists$V1),]
View(x)
write.table(x, file="notGenre.tsp", col.names=F, row.names=F, quote = F, sep="\t")
newTraining <- read.delim("~/Documentos/Mestrado/Git/lodrecsys15/R/Artists/newTraining.tsp", header=FALSE)
View(newTraining)
x = length((newTraining$V2%in%x$item))
length((newTraining$V2%in%x$item))
x = newArtists[!(newArtists$item%in%LOD_artists$V1),]
length((newTraining$V2%in%x$item))
length(!(newTraining$V2%in%x$item))
length(newTraining$V2[!(newTraining$V2%in%x$item)])
length(newTraining$V2[(newTraining$V2%in%x$item)])
newTraining[(newTraining$V2%in%x$item),]
y = newTraining[(newTraining$V2%in%x$item),]
View(y)
